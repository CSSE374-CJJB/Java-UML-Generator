<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>4</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>680</x>
      <y>448</y>
      <w>160</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel::JavaModel
--
~map: HashMap&lt;String, AbstractJavaStructure&gt;
~methodGroups: List&lt;MethodCallGroup&gt;
~includedClasses: Set&lt;String&gt;
--
+containsStructure(String name): boolean
+putStructure(String name, AbstractJavaStructure struct): void
+getStructure(String name): AbstractJavaStructure
+getChildParrentIncludedRelations(): List&lt;Relation&gt;
+getIncludedInterfaceRelations(): List&lt;Relation&gt;
+getIncludedUsesRelations(): List&lt;Relation&gt;
+getIncludedAssociationReltiations(): List&lt;Relation&gt;
+addMethodCallGroup(MethodCallGroup group): void
+convertMethodCallLinesToStructure(): void
+accept(IUMLVisitor v): void
+accept(ISequenceVisitor v): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>272</x>
      <y>432</y>
      <w>164</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel.visitor::UMLDotVisitor
--
-out: OutputStream
-model: JavaModel
+BOILER_PLATE = "digraph G ...
--
+UMLDotVisitor(OutputStream out, JavaModel model): ctor
+visitStart(): void
+visit(Class clazz): void
+visit(Interface clazz): void
+visit(Field clazz): void
+visitEndFields(): void
+visit(Method clazz): void
+visitEndStructure(): void
+visitEnd(): void
-getAccessModifierString(IAccessModifier modifier): String
-getArgumentString(List&lt;AbstractJavaStructure&gt; args): String
+visitRelations(JavaModel model): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>532</y>
      <w>244</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.asm::Utils
--
--
+getAccessModifier(int access): IAccessModifier
+getModifiers(int access): List&lt;IModifier&gt;
+getInstanceOrJavaStructure(JavaModel model, String name): AbstractJavaStructure
+getInstanceOrJavaStructures(JavaModel model, String[] names): List&lt;AbstractJavaStructure&gt;
+getCleanName(String name): String
+getCleanNames(String[] names): String[]
+getGenericsPart(String signiture): String[]
+getReturnType(String desc): String
+getListOfArgs(String desc): List&lt;String&gt;
+isInterface(String name): boolean
+shortName(String name): String
+getAsmName(String c): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>312</x>
      <y>40</y>
      <w>120</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb::JavaModelClassVisitor
--
+classes: Set&lt;String&gt;
-model: JavaModel
-classSearch: String
-methodSearch: QualifiedMethod
-depth: int
--
+buildUMLModel(): void
+buildSeqModel(): void
+getModel(): JavaModel</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>88</x>
      <y>40</y>
      <w>172</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb::Main
--
+CLASSES = { "java.util.Calendar" }: String[]
+PACKAGES = {}: String[]
--
+main(String[] args): void
-getClassFromArgs(String[] args): String
-getDescFromArgs(String[] args): String
-getMethodFromArgs(String[] args): String
-getPackagesFromArgs(String[] args): List&lt;String&gt;
-getClassesFromArgs(String[] args): List&lt;String&gt;
-exampleCall(OutputStream umlOut, OutputStream seqOut): void
-getClasses(String packageName): List&lt;String&gt;
-findClasses(File directory, String packageName): List&lt;String&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>284</x>
      <y>568</y>
      <w>132</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
edu.rosehulman.cjjb.javaModel.visitor::IUMLVisitor
--
--
~visitStart(): void
~visit(Class clazz): void
~visit(Interface clazz): void
~visit(Field clazz): void
~visitEndFields(): void
~visit(Method clazz): void
~visitEndStructure(): void
~visitRelations(JavaModel model): void
~visitEnd(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>196</y>
      <w>260</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.asm::ClassSequnceClassVisitor
--
-model: JavaModel
-methodsToFind: Set&lt;QualifiedMethod&gt;
-depth: int
-seqStructure: SequenceStructure
-className: String
--
+visitMethod(int access, String name, String desc, String signature, String[] exceptions): MethodVisitor
+visitEnd(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>124</y>
      <w>204</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>/edu.rosehulman.cjjb.javaModel::AbstractJavaStructure/
--
+subElements: List&lt;AbstractJavaElement&gt;
+implement: List&lt;AbstractJavaStructure&gt;
--
+addSubElement(AbstractJavaElement element): void
+accept(IUMLVisitor v): void
+getElementByName(String name): AbstractJavaElement
+getMethodByQualifiedName(QualifiedMethod meth, JavaModel model): Method
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>316</y>
      <w>108</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel::Method
--
+structure: AbstractJavaStructure
+arguments: List&lt;AbstractJavaStructure&gt;
+methodCalls: List&lt;Method&gt;
+isConstructor: boolean
--
+accept(IUMLVisitor v): void
+addMethodCall(Method method): void
+argumentsToString(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>640</x>
      <y>352</y>
      <w>164</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.asm::SequenceStructure
--
-classMethod: Map&lt;String, Set&lt;QualifiedMethod&gt;&gt;
-visitedMethods: Map&lt;String, Set&lt;QualifiedMethod&gt;&gt;
--
+SequenceStructure(): ctor
+addMethod(String clazz, QualifiedMethod method): void
+getClassMethods(): Map&lt;String, Set&lt;QualifiedMethod&gt;&gt;
+vistedAll(): void
+visitedMethod(String clazz, QualifiedMethod method): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>900</x>
      <y>60</y>
      <w>136</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>/edu.rosehulman.cjjb.javaModel::AbstractJavaThing/
--
+name: String
+access: IAccessModifier
+modifiers: List&lt;IModifier&gt;
--
+hashCode(): int
+equals(Object obj): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>444</x>
      <y>432</y>
      <w>216</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel.visitor::SDSequenceVisitor
--
-className: String
-method: QualifiedMethod
-depth: int
-out: OutputStream
--
+visit(JavaModel model): void
+addCalls(int depth, Set&lt;String&gt; objects, List&lt;String&gt; sdCalls, Method method): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>488</y>
      <w>116</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.asm::MethodCallGroup
--
+classCaller: String
+method: QualifiedMethod
+lines: List&lt;MethodCallLine&gt;
--
+addLine(MethodCallLine line): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>392</y>
      <w>112</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.asm::QualifiedMethod
--
+methodName: String
+methodDesc: String
--
+hashCode(): int
+equals(Object obj): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>116</y>
      <w>236</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.asm::ClassFieldVisitor
--
-className: String
-model: JavaModel
--
+visitField(int access, String name, String desc, String signature, Object value): FieldVisitor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>156</y>
      <w>260</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.asm::ClassMethodVisitor
--
-className: String
-model: JavaModel
--
+visitMethod(int access, String name, String desc, String signature, String[] exceptions): MethodVisitor
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>264</y>
      <w>220</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.asm::ClassSequnceMethodVisitor
--
-depth: int
-seqStructure: SequenceStructure
--
+visitMethodInsn(int opcode, String owner, String name, String desc, boolean itf): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>444</y>
      <w>112</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.asm::MethodCallLine
--
+classOf: String
+method: QualifiedMethod
+returnType: String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>236</y>
      <w>104</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel::Class
--
+superClass: AbstractJavaStructure
--
+accept(IUMLVisitor v): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>84</y>
      <w>260</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.asm::ClassDeclarationVisitor
--
-model: JavaModel
--
+visit(int version, int access, String name, String signature, String superName, String[] interfaces): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>308</y>
      <w>220</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.asm::ClassMethodLineVisitor
--
-method: MethodCallGroup
--
+visitMethodInsn(int opcode, String owner, String name, String desc, boolean itf): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>204</y>
      <w>140</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>/edu.rosehulman.cjjb.javaModel::AbstractJavaElement/
--
+owner: AbstractJavaStructure
+type: AbstractJavaStructure
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>268</y>
      <w>112</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel::Interface
--
--
+accept(IUMLVisitor v): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>952</x>
      <y>780</y>
      <w>184</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
edu.rosehulman.cjjb.javaModel.checks::IPatternCheck
--
--
+check(JavaModel model): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>292</y>
      <w>104</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel::Field
--
--
+accept(IUMLVisitor v): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>468</x>
      <y>572</y>
      <w>148</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
edu.rosehulman.cjjb.javaModel.visitor::ISequenceVisitor
--
--
~visit(JavaModel model): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>584</x>
      <y>680</y>
      <w>152</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
edu.rosehulman.cjjb.javaModel.visitor::ISquenceTraverser
--
--
+accept(ISequenceVisitor v): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>436</x>
      <y>680</y>
      <w>140</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
edu.rosehulman.cjjb.javaModel.visitor::IUMLTraverser
--
--
+accept(IUMLVisitor v): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1148</x>
      <y>92</y>
      <w>148</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
edu.rosehulman.cjjb.javaModel.modifier::IAccessModifier
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1356</x>
      <y>92</y>
      <w>132</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
edu.rosehulman.cjjb.javaModel.modifier::IModifier
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1356</x>
      <y>156</y>
      <w>148</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel.modifier::AbstractModifier
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1356</x>
      <y>176</y>
      <w>140</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel.modifier::FinalModifier
--
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1356</x>
      <y>196</y>
      <w>144</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel.modifier::NativeModifier
--
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1148</x>
      <y>116</y>
      <w>148</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel.modifier::PrivateModifier
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1148</x>
      <y>176</y>
      <w>152</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel.modifier::ProtectedModifier
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1148</x>
      <y>136</y>
      <w>172</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel.modifier::ProtectedPrivateModifier
--
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1148</x>
      <y>156</y>
      <w>144</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel.modifier::PublicModifier
--
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1356</x>
      <y>116</y>
      <w>144</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel.modifier::StaticModifier
--
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1356</x>
      <y>136</y>
      <w>164</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel.modifier::SynchronizedModifier
--
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1292</x>
      <y>92</y>
      <w>72</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>160.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1112</x>
      <y>96</y>
      <w>44</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0;10.0;220.0;90.0;220.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1112</x>
      <y>160</y>
      <w>44</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1112</x>
      <y>140</y>
      <w>44</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1112</x>
      <y>120</y>
      <w>44</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1320</x>
      <y>100</y>
      <w>44</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0;10.0;260.0;90.0;260.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1320</x>
      <y>180</y>
      <w>44</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1320</x>
      <y>160</y>
      <w>44</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1320</x>
      <y>140</y>
      <w>44</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1320</x>
      <y>120</y>
      <w>44</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>256</x>
      <y>68</y>
      <w>64</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>472</x>
      <y>204</y>
      <w>32</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0;60.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>472</x>
      <y>232</y>
      <w>32</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;60.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>472</x>
      <y>60</y>
      <w>32</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0;10.0;370.0;60.0;370.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>864</x>
      <y>72</y>
      <w>44</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>864</x>
      <y>144</y>
      <w>40</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0;80.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>640</y>
      <w>108</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel::Relation
--
+base: AbstractJavaThing
+other: AbstractJavaThing
--
+hashCode(): int
+equals(Object obj): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>908</x>
      <y>788</y>
      <w>52</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>328</x>
      <y>540</y>
      <w>12</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>836</x>
      <y>412</y>
      <w>68</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>150.0;10.0;70.0;10.0;70.0;230.0;10.0;230.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>472</x>
      <y>268</y>
      <w>32</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0;60.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>592</x>
      <y>820</y>
      <w>320</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel.checks::DecoratorCheck
--
--
+check(JavaModel model): List&lt;IPattern&gt;
+checkForPotentialDecorator(AbstractJavaStructure structure): boolean
+PopulateListOfClassesToOther(Set&lt;AbstractJavaStructure&gt; set, AbstractJavaStructure struct, AbstractJavaStructure to): void
+hasField(AbstractJavaStructure structure, AbstractJavaStructure of): boolean
+hasFieldCastableTo(List&lt;AbstractJavaElement&gt; elements, AbstractJavaStructure to): boolean
+containsPattern(List&lt;IPattern&gt; patterns, AbstractJavaStructure to): DecoratorPattern</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>644</x>
      <y>880</y>
      <w>268</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel.checks::AdapterCheck
--
--
+check(JavaModel model): List&lt;IPattern&gt;
+checkMethodsForCallTo(List&lt;AbstractJavaElement&gt; subElements, AbstractJavaStructure arg): boolean
+hasFieldCastableTo(List&lt;AbstractJavaElement&gt; subElements, AbstractJavaStructure to): boolean
+checkInheritance(JavaClass struct): AbstractJavaStructure</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>908</x>
      <y>788</y>
      <w>28</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>50.0;10.0;50.0;140.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>908</x>
      <y>840</y>
      <w>28</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>50.0;10.0;50.0;140.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>996</x>
      <y>816</y>
      <w>140</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IPattern
--
--
+getStereotype(AbstractJavaStructure struct): String
+getInvolvedStructes(): List&lt;AbstractJavaStructure&gt;
+getDefaultColor(): Color
+getTopLevelRelations(): List&lt;Relation&gt;
-getRelationName(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>60</y>
      <w>68</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>ClassVisitor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>472</x>
      <y>176</y>
      <w>32</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>472</x>
      <y>140</y>
      <w>32</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>472</x>
      <y>92</y>
      <w>32</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>428</x>
      <y>44</y>
      <w>88</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>200.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>864</x>
      <y>172</y>
      <w>40</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;80.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>864</x>
      <y>208</y>
      <w>40</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;80.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>864</x>
      <y>244</y>
      <w>40</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0;80.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>864</x>
      <y>276</y>
      <w>40</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;80.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>864</x>
      <y>296</y>
      <w>40</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0;80.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>860</x>
      <y>500</y>
      <w>44</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>860</x>
      <y>456</y>
      <w>44</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>860</x>
      <y>500</y>
      <w>44</w>
      <h>164</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>90.0;390.0;10.0;390.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>860</x>
      <y>560</y>
      <w>44</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>744</x>
      <y>680</y>
      <w>88</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
IStructureTraverser
--
+accept(IStructureVisitor v) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>544</x>
      <y>480</y>
      <w>12</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;230.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>756</x>
      <y>552</y>
      <w>12</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;320.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>668</x>
      <y>620</y>
      <w>100</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;150.0;10.0;10.0;230.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>620</y>
      <w>160</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;150.0;10.0;10.0;380.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>656</x>
      <y>460</y>
      <w>32</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>432</x>
      <y>492</y>
      <w>256</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;620.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>824</x>
      <y>60</y>
      <w>84</w>
      <h>396</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>190.0;10.0;10.0;10.0;10.0;970.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1192</x>
      <y>672</y>
      <w>156</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel.pattern::CompositePattern
--
+component: AbstractJavaStructure
~composites: Set&lt;AbstractJavaStructure&gt;
~leaves: Set&lt;AbstractJavaStructure&gt;
+COMPONENT = "Component": String
+LEAF = "Leaf": String
+COMPOSITE = "Composite": String
--
+CompositePattern(AbstractJavaStructure component): ctor
+getStereotype(AbstractJavaStructure struct): String
+getInvolvedStructes(): List&lt;AbstractJavaStructure&gt;
+getDefaultColor(): Color
+getTopLevelRelations(): List&lt;Relation&gt;
+getRelationName(): String
+addLeaf(AbstractJavaStructure struct): void
+addComposite(AbstractJavaStructure struct): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1132</x>
      <y>828</y>
      <w>68</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1164</x>
      <y>804</y>
      <w>36</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;210.0;70.0;210.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1164</x>
      <y>880</y>
      <w>36</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;210.0;70.0;210.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1192</x>
      <y>940</y>
      <w>140</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>AdapterPattern
--
AbstractJavaStructure from
AbstractJavaStructure to
JavaClass adapter
+ static final String TARGET
+ static final String ADAPTEE
+ static final String ADAPTER
+ static final String RELATION_NAME
--
+getStereotype(AbstractJavaStructure struct): String
+getInvolvedStructes(): List&lt;AbstractJavaStructure&gt;
+getDefaultColor(): Color
+getTopLevelRelations(): List&lt;Relation&gt;
-getRelationName(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1192</x>
      <y>856</y>
      <w>140</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>DecoratorPattern
--
Set&lt;AbstractJavaStructure&gt; set
AbstractJavaStructure struct
+ static final String COMPONENT
+ static final String DECORATOR
+ static final String DECORATOR_NAME
--
+getStereotype(AbstractJavaStructure struct): String
+getInvolvedStructes(): List&lt;AbstractJavaStructure&gt;
+getDefaultColor(): Color
+getTopLevelRelations(): List&lt;Relation&gt;
-getRelationName(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1192</x>
      <y>792</y>
      <w>140</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>SingletonPattern
--
JavaClass struct
+ static final String STEREOTYPE
--
+getStereotype(AbstractJavaStructure struct): String
+getInvolvedStructes(): List&lt;AbstractJavaStructure&gt;
+getDefaultColor(): Color
+getTopLevelRelations(): List&lt;Relation&gt;
-getRelationName(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1164</x>
      <y>732</y>
      <w>36</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;190.0;10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>688</x>
      <y>764</y>
      <w>224</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel.checks::CompositeCheck
--
~set = new HashSet&lt;AbstractJavaStructure&gt;(): Set&lt;AbstractJavaStructure&gt;
--
+check(JavaModel model): List&lt;IPattern&gt;
+hasAddRemove(AbstractJavaStructure struct): boolean
+containsPattern(List&lt;IPattern&gt; patterns, AbstractJavaStructure to): CompositePattern
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>740</x>
      <y>408</y>
      <w>12</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1032</x>
      <y>68</y>
      <w>196</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>470.0;60.0;470.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1216</x>
      <y>68</y>
      <w>196</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>470.0;60.0;470.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>460</x>
      <y>720</y>
      <w>164</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel.checks::PatternFindingFactory
--
--
+getPatternChecks(): List&lt;IPatternCheck&gt;
+getStructureVisitors(): List&lt;IStructureVisitor&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>620</x>
      <y>732</y>
      <w>156</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>370.0;80.0;370.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>764</x>
      <y>704</y>
      <w>12</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>40</x>
      <y>432</y>
      <w>220</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>edu.rosehulman.cjjb.javaModel.visitor::SingletonVisitor
--
--
+visit(JavaModel model, AbstractJavaStructure struct): List&lt;IPattern&gt;
-checkForStaticInstance(AbstractJavaStructure structure): boolean
-checkForModifier(List&lt;IModifier&gt; modifiers, Class&lt;?&gt; c): boolean
-checkForGetInstance(JavaModel model, AbstractJavaStructure structure): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>60</x>
      <y>568</y>
      <w>172</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
edu.rosehulman.cjjb.javaModel.visitor::IStructureVisitor
--
--
~visit(JavaModel model, AbstractJavaStructure s): List&lt;IPattern&gt;

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>136</x>
      <y>476</y>
      <w>12</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;230.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
